<launch>
<!-- some standard gazebo parameters -->
<arg name="paused" default="false"/>
<arg name="use_sim_time" default="true"/>
<arg name="gui" default="true"/>
<arg name="headless" default="false"/>
<arg name="debug" default="false"/>

<!-- simulator stuff -->
<arg name="scene_file" default="$(find pedsim_simulator)scenarios/social_contexts_prueba.xml"/> ​ <!-- people number/movements, obstacles and robot pose setup -->


<!-- this needs some additional work and explanations, other day -->
<arg name="with_robot" default="true"/>
<arg name="robot_mode" default="1"/>
<arg name="max_robot_speed" default="1.5"/>
<arg name="default_queue_size" default="10"/>
<arg name="enable_groups" default="false"/>​ <!-- without groups of people -->
<arg name="simulation_factor" default="1"/> ​ <!-- Speed up: antes = 1.5 -->
<arg name="update_rate" default="25"/> ​ <!-- Hz: antes 25 -->
<node name="pedsim_simulator" pkg="pedsim_simulator" type="pedsim_simulator" output="screen">
<param name="scene_file" value="$(arg scene_file)" type="string"/>
<param name="default_queue_size" value="$(arg default_queue_size)" type="int"/>
<param name="robot_mode" value="$(arg robot_mode)" type="int"/>
<param name="max_robot_speed" value="$(arg max_robot_speed)" type="double"/>
<param name="enable_groups" value="$(arg enable_groups)" type="bool"/>
<param name="simulation_factor" value="$(arg simulation_factor)" type="double"/>
<param name="update_rate" value="$(arg update_rate)" type="double"/>
</node>

<!-- this node spawn pedsim actors to gazebo once, then the plugin updates their pose-->
<node pkg="pedsim_gazebo_plugin" type="spawn_pedsim_agents.py" name="spawn_pedsim_agents" output="screen">
</node>


<!-- turtlebot2 stuff -->
<include file="$(find turtlebot_gazebo)/launch/turtlebot_world.launch">
<arg name="world_file" value="$(find pedsim_gazebo_plugin)/worlds/social_contexts_prueba.world"/> ​ <!-- world provided by the pedsim package -->
</include> ​ <!-- and nothing more -->

<!-- blob detector stuff -->
<arg name="detection_id_increment" default="20"/> <!-- antes 20 -->
<arg name="laser_max_distance" default="30"/> <!-- antes 15 -->

<group ns="/spencer/perception_internal/people_detection">
<group>

<!-- Front laser detector (Blob detector with high recall, but low precision) -->
<!-- TODO: Use same segmentation as for high-precision detector -->

<include file="$(find srl_laser_detectors)/launch/blob_detector.launch" ns="laser_front_high_recall">

<arg name="detected_persons" value="/spencer/perception/detected_persons"/> ​ <!-- output topic -->

<arg name="laser" value="/laserscan"/> ​ <!-- input topic (ie the hokuyo laserscan topic)-->

<arg name="min_avg_distance_from_sensor" value="0.0"/>

<arg name="max_avg_distance_from_sensor" value="$(arg laser_max_distance)"/>

<arg name="min_points_per_segment" value="3"/>

<arg name="max_points_per_segment" value="999"/>

<arg name="detection_id_offset" value="9"/>

<arg name="detection_id_increment" value="$(arg detection_id_increment)"/>

<arg name="pose_variance" value="0.01"/>

</include>
</group>
</group>

<!-- tracker stuff -->
<arg name="tracker" default="true"/>
<arg name="subscriber_queue_size" default="1"/>
<arg name="laser_low_confidence_detections" default="true"/>

<group ns="/spencer/perception_internal/people_tracking" if="$(arg tracker)">

<include file="$(find srl_nearest_neighbor_tracker)/launch/nnt.launch">
<arg name="subscriber_queue_size" value="$(arg subscriber_queue_size)"/>
<arg name="use_imm" value="true"/>
</include>

<!-- I think that the following params are not necessary -->
<rosparam
param="srl_nearest_neighbor_tracker/additional_low_confidence_detections" if="$(arg
laser_low_confidence_detections)">/spencer/perception_internal/detected_person_association/lasers_high_recall_aggregated</rosparam>

<rosparam
param="srl_nearest_neighbor_tracker/additional_low_confidence_detections"
unless="$(arg laser_low_confidence_detections)"></rosparam>

</group>

<!-- Filter tracks that are output by people tracker (e.g. visually confirmed tracks,
moving tracks etc. on separate topics) -->

<include file="$(find spencer_people_tracking_launch)/launch/tracking/filter_tracks.launch"/>

<!-- that’s all folks -->

</launch>
